{"version":3,"sources":["components/Header/Haeder.js","components/Toogler/Toogler.js","components/TodoItem/TodoItem.js","components/Todolist/TodoList.js","components/Footer/Footer.js","App.js","index.js"],"names":["Header","state","placeholder","inputValue","handleSetTodoValue","e","_this","setState","target","value","handleSubmit","preventDefault","valueTodo","props","addTodo","react_default","a","createElement","onSubmit","this","onChange","className","Component","Toogler","_ref","todos","setStateByEtargetValue","length","Fragment","onClick","w","type","id","htmlFor","TodoItem","todoItem","todo","done","label","TodoList","setDoneStatus","destroyTodo","map","key","checked","TodoItem_TodoItem","Footer","isActive","_this2","_this$props","TodosDone","href","App","curentFilter","createTodo","concat","Object","toConsumableArray","objectSpread2","filter","showDone","some","textContent","_this$state","renderTodos","Haeder_Header","Toogler_Toogler","Todolist_TodoList","Footer_Footer","Date","getTime","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.b9d6b4b1.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Header extends Component {\n  state = {\n    placeholder: 'What needs to be done?',\n    inputValue: '',\n  };\n\n  handleSetTodoValue = (e) => {\n    this.setState({\n      inputValue: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { inputValue } = this.state;\n\n    if (inputValue === '') {\n      this.setState({\n        placeholder: 'YOU HAVE TO INPUT TODO',\n      });\n\n      return;\n    }\n\n    const valueTodo = this.state.inputValue;\n\n    this.props.addTodo(valueTodo);\n    this.setState({\n      inputValue: '',\n      placeholder: 'What needs to be done?',\n    });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          onChange={this.handleSetTodoValue}\n          value={this.state.inputValue}\n          className=\"new-todo\"\n          placeholder={this.state.placeholder}\n        />\n      </form>\n    );\n  }\n}\nHeader.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Toogler({ todos, setStateByEtargetValue }) {\n  return (\n    <div>\n      {todos.length > 0\n        && (\n        <>\n          <input\n            onClick={(w) => {\n              setStateByEtargetValue(w);\n            }}\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            value=\"toggle-all\"\n          />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n        </>\n        )\n      }\n    </div>\n  );\n}\n\nexport default Toogler;\n\nToogler.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setStateByEtargetValue: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction TodoItem({ todoItem }) {\n  const todo = todoItem.done\n    ? <s>{todoItem.label}</s>\n    : <>{todoItem.label}</>;\n\n  return (\n    <label htmlFor=\"todo-1\">{todo}</label>\n  );\n}\n\nexport default TodoItem;\n\nTodoItem.propTypes = {\n  todoItem: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from '../TodoItem/TodoItem';\n\nfunction TodoList({ todos, setDoneStatus, destroyTodo }) {\n  return (\n    <ul className=\"todo-list\">\n      {todos.map(todo => (\n        <li key={todo.id}>\n          <div className=\"view\">\n            <input\n              onChange={() => setDoneStatus(todo.id)}\n              type=\"checkbox\"\n              className=\"toggle\"\n              id={todo.id}\n              checked={todo.done}\n            />\n            <TodoItem todoItem={todo} />\n            <button\n              onClick={() => destroyTodo(todo.id)}\n              type=\"button\"\n              className=\"destroy\"\n            />\n          </div>\n          <input type=\"text\" className=\"edit\" />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default TodoList;\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setDoneStatus: PropTypes.func.isRequired,\n  destroyTodo: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Footer extends Component {\n  state = {\n    isActive: 'All',\n  };\n\n  render() {\n    const { isActive } = this.state;\n    const { todos, TodosDone, setStateByEtargetValue } = this.props;\n\n    return (\n      <div>\n        {todos.length > 0\n        && (\n          <footer className=\"footer\">\n            <span className=\"todo-count\">\n              {todos.length - TodosDone()}\n: items not finished\n              <br />\n\n            </span>\n\n            <ul className=\"filters\">\n              <li>\n                <a\n                  href=\"./#\"\n                  onClick={(w) => {\n                    setStateByEtargetValue(w); this.setState({\n                      isActive: 'All',\n                    });\n                  }}\n                  className={isActive === 'All' ? 'selected' : ''}\n                >\nAll\n                </a>\n              </li>\n\n              <li>\n                <a\n                  href=\"./#\"\n                  onClick={(w) => {\n                    setStateByEtargetValue(w); this.setState({\n                      isActive: 'Active',\n                    });\n                  }}\n                  className={isActive === 'Active' ? 'selected' : ''}\n                >\nActive\n                </a>\n              </li>\n\n              <li>\n                <a\n                  href=\"./#\"\n                  onClick={(w) => {\n                    setStateByEtargetValue(w); this.setState({\n                      isActive: 'Completed',\n                    });\n                  }}\n                  className={isActive === 'Completed' ? 'selected' : ''}\n                >\nCompleted\n                </a>\n              </li>\n            </ul>\n\n            <button\n              onClick={(w) => {\n                setStateByEtargetValue(w);\n              }}\n              type=\"button\"\n              className=\"clear-completed\"\n            >\n            Clear completed\n            </button>\n          </footer>\n        )\n        }\n      </div>\n    );\n  }\n}\nFooter.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  TodosDone: PropTypes.func.isRequired,\n  setStateByEtargetValue: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport Header from './components/Header/Haeder';\nimport Toogler from './components/Toogler/Toogler';\nimport TodoList from './components/Todolist/TodoList';\nimport Footer from './components/Footer/Footer';\n\nexport default class App extends Component {\n  static createTodo(label) {\n    return {\n      id: new Date().getTime(),\n      label,\n      done: false,\n    };\n  }\n\n  state = {\n    todos: [],\n    curentFilter: 'All',\n\n  };\n\n  addTodo = (label) => {\n    this.setState((state) => {\n      const todo = App.createTodo(label);\n\n      return {\n        todos: [...state.todos, todo],\n      };\n    });\n  };\n\n  setDoneStatus = (id) => {\n    this.setState(state => ({\n      todos: state.todos.map((todo) => {\n        if (id === todo.id) {\n          return {\n            ...todo,\n            done: !todo.done,\n          };\n        }\n\n        return todo;\n      }),\n    }));\n  };\n\n  destroyTodo = (id) => {\n    this.setState(state => ({\n      todos: state.todos.filter(todo => todo.id !== id),\n    }));\n  };\n\n  showDone = () => this.state.todos.filter(todo => todo.done).length;\n\n  setStateByEtargetValue = (e) => {\n    if (e.target.value === 'toggle-all') {\n      if (this.state.todos.some(todo => todo.done)) {\n        this.setState(state => ({\n          todos: state.todos.map(todo => ({\n            ...todo,\n            done: false,\n          })),\n        }));\n      }\n\n      if (this.state.todos.some(todo => !todo.done)) {\n        this.setState(state => ({\n          todos: state.todos.map(todo => ({\n            ...todo,\n            done: true,\n          })),\n        }));\n      }\n    }\n\n    if (e.target.textContent === 'Clear completed') {\n      this.setState(state => ({\n        todos: state.todos.filter(todo => !todo.done),\n      }));\n    }\n\n    this.setState({\n      curentFilter: e.target.textContent,\n    });\n  };\n\n  render() {\n    const { todos, curentFilter } = this.state;\n    const renderTodos = () => {\n      switch (curentFilter) {\n        case 'Active':\n          return todos.filter(todo => !todo.done);\n        case 'Completed':\n          return todos.filter(todo => todo.done);\n        default:\n          return [...todos];\n      }\n    };\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <Header addTodo={this.addTodo} />\n        </header>\n\n        <section className=\"main\">\n\n          <Toogler\n            todos={renderTodos()}\n            setStateByEtargetValue={this.setStateByEtargetValue}\n          />\n\n          <TodoList\n            todos={renderTodos()}\n            setDoneStatus={this.setDoneStatus}\n            destroyTodo={this.destroyTodo}\n          />\n\n        </section>\n\n        <Footer\n          todos={todos}\n          setStateByEtargetValue={this.setStateByEtargetValue}\n          TodosDone={this.showDone}\n        />\n\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}